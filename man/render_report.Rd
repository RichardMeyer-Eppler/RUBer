% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report.R
\name{render_report}
\alias{render_report}
\alias{render_report_safely}
\title{Render a single parametric report as Word file}
\usage{
render_report(
  p_df = filter_report(RUBer::df_example, 6L),
  p_df_stg = NULL,
  report_nr = 6L,
  rmd_template = system.file("rmarkdown", "templates", "datenreport-2022", "skeleton",
    "skeleton.Rmd", package = "RUBer"),
  output_directory = fs::path_temp(),
  output_filename = fs::path_file(fs::file_temp(pattern = "report", ext = ".docx")),
  title = "Title",
  author = "Author",
  date = format(Sys.Date(), format = "\%B \%Y"),
  font_file = "RubFlama-Regular.ttf",
  path_figure_template = fs::file_temp(pattern = "figure_template_", ext = ".Rmd"),
  post_process = TRUE
)

render_report_safely(...)
}
\arguments{
\item{p_df}{Data frame containing the data for all reports}

\item{p_df_stg}{Optional data frame with information on cases}

\item{report_nr}{Report number of the report}

\item{rmd_template}{Path to the R Markdown File for that report, defaults to Datenreport 2022 template from RUBer package}

\item{output_directory}{Output directory for the rendered report, defaults to
\code{here::here("output")}}

\item{output_filename}{Output filename for the rendered report, defaults to
\code{p_df[[1, "file_name"]]}}

\item{title}{Character, title for the title page}

\item{author}{Character, author for the title page}

\item{date}{Date of the report displayed on the title page, defaults to
\code{format(Sys.Date(), format= "\%B \%Y")}.}

\item{font_file}{Character, font file to use in all plots, defaults to
"RubFlama-Regular.ttf"}

\item{path_figure_template}{Character, file path to write the dynamically generated figure chunks
to file (useful for debugging purposes). Defaults to
\code{fs::file_temp(pattern = "figure_template_", ext = ".Rmd")}}

\item{post_process}{Boolean, whether \code{post_process} gets called on the
output file}

\item{...}{Arguments passed on to \code{render_report}}
}
\value{
Invisibly returns \code{p_df}
}
\description{
The \code{render_report} function is called once for each report to be created. \code{render_report_safely}
wraps \code{render_report} in \code{purrr::safely}.
}
\examples{
# Check if pandoc is available in the minimum required version
pandoc_available <- rmarkdown::pandoc_available(
  version = "2.0",
  error = FALSE
)

if(pandoc_available){

  # Get paths for skeleton.Rmd
  skeleton_location <- fs::path_package(
    package = "RUBer",
    "rmarkdown",
    "templates",
    "datenreport-2022",
    "skeleton",
    "skeleton.Rmd"
  )

  # Session based output directory
  output_directory <- fs::path_temp()

  # File name for the report output file
  output_filename <- fs::path_file(
    fs::file_temp(
      pattern = "RUBer_report_",
      ext = ".docx"
    )
  )

  # Full path to output file
  path_report_docx <- fs::path(
    output_directory,
    output_filename
  )

  # Create output directory
  fs::dir_create(
    output_directory
  )

  # Copy all files in the skeleton folder to the output directory
  fs::file_copy(
    path = fs::dir_ls(
      fs::path_dir(
        skeleton_location
      )
    ),
    new_path = output_directory
  )

  # Render the report in the temporary output directory
  render_report(
    rmd_template = skeleton_location,
    output_directory = output_directory,
    output_filename = output_filename
  )

  if(
    fs::file_exists(
      path_report_docx
    )
  ){
    rlang::inform(
      message = c(
        "i" = glue::glue(
          'File "{path_report_docx}" was written successfully.'
        )
      )
    )
  }
}
}
