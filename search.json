[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Richard Meyer-Eppler Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/RUB_colors.html","id":"colors","dir":"Articles","previous_headings":"","what":"Colors","title":"Using RUB colors","text":"RUBer provides easy access colors specified RUB corporate design. package loaded, access available colors typing RUB_colors. Note assigned color names assigned part package offically sanctioned corporate design guide. retrieve several colors , use getter function get_RUB_colors().","code":"# Retrieve all available colors RUB_colors #>      green   green_80   green_60   green_40   green_20       blue    blue_80  #>  \"#8DAE10\"  \"#A4BE40\"  \"#BBCE70\"  \"#D1DF9F\"  \"#E8EFCF\"  \"#003560\"  \"#335D80\"  #>    blue_60    blue_40    blue_20 light grey        red   dark red     orange  #>  \"#6686A0\"  \"#99AEBF\"  \"#CCD7DF\"  \"#E7E7E7\"  \"#E6332A\"  \"#B61E3E\"  \"#ED7102\"  #>       gold      brown        tan dark brown  asparagus  #>  \"#FFCC00\"  \"#9C5516\"  \"#C1BAA3\"  \"#59201B\"  \"#8C8751\"  # ... access individual color by index RUB_colors[1] #>     green  #> \"#8DAE10\"  # ... or by name RUB_colors[\"dark red\"] #>  dark red  #> \"#B61E3E\" # Retrieve several colors by name get_RUB_colors(\"green\", \"blue\", \"orange\") #>     green      blue    orange  #> \"#8DAE10\" \"#003560\" \"#ED7102\"  # Retrieve several colors by index get_RUB_colors(4:6, 9) #>  green_40  green_20      blue   blue_40  #> \"#D1DF9F\" \"#E8EFCF\" \"#003560\" \"#99AEBF\""},{"path":"/articles/RUB_colors.html","id":"palettes","dir":"Articles","previous_headings":"","what":"Palettes","title":"Using RUB colors","text":"colors combined several palettes. retrieve available palettes, use RUB_palettes. retrieve particular palette name, use function get_RUB_palettes plus number required colors round brackets like get_RUB_palettes(palette = \"discrete_5\")(5). palette contains less elements requested, additional colors automatically extrapolated. Note RUB colors defined corporate design designed data visualization mind. palettes presented ad-hoc rather informal, corporate design offically extended include visualization design. can visualize palettes using Emil Hvitfeldt’s excellent prismatic package.","code":"# All availabble palettes RUB_palettes #> $discrete #>     green      blue       red  dark red    orange      gold     brown  #> \"#8DAE10\" \"#003560\" \"#E6332A\" \"#B61E3E\" \"#ED7102\" \"#FFCC00\" \"#9C5516\"  #>  #> $discrete_contrast #>      gold       red     brown       tan  #> \"#FFCC00\" \"#E6332A\" \"#9C5516\" \"#C1BAA3\"  #>  #> $discrete_1 #>     green  #> \"#8DAE10\"  #>  #> $discrete_2 #>     green      blue  #> \"#8DAE10\" \"#003560\"  #>  #> $discrete_3 #>      green light grey       blue  #>  \"#8DAE10\"  \"#E7E7E7\"  \"#003560\"  #>  #> $discrete_4 #>     green  green_60   blue_40      blue  #> \"#8DAE10\" \"#BBCE70\" \"#99AEBF\" \"#003560\"  #>  #> $discrete_5 #>      green   green_60 light grey    blue_40       blue  #>  \"#8DAE10\"  \"#BBCE70\"  \"#E7E7E7\"  \"#99AEBF\"  \"#003560\"  #>  #> $discrete_6 #>     green  green_80  green_40   blue_40   blue_80      blue  #> \"#8DAE10\" \"#A4BE40\" \"#D1DF9F\" \"#99AEBF\" \"#335D80\" \"#003560\"  #>  #> $discrete_7 #>      green   green_80   green_40 light grey    blue_40    blue_80       blue  #>  \"#8DAE10\"  \"#A4BE40\"  \"#D1DF9F\"  \"#E7E7E7\"  \"#99AEBF\"  \"#335D80\"  \"#003560\"  #>  #> $discrete_8 #>     green  green_80  green_60  green_40   blue_40   blue_60   blue_80      blue  #> \"#8DAE10\" \"#A4BE40\" \"#BBCE70\" \"#D1DF9F\" \"#99AEBF\" \"#6686A0\" \"#335D80\" \"#003560\"  #>  #> $continuous #>     green      blue  #> \"#8DAE10\" \"#003560\"  #>  #> $continuous_diverging #>      green light grey       blue  #>  \"#8DAE10\"  \"#E7E7E7\"  \"#003560\"  # Retrieve five colors from the palette \"discrete_5\" get_RUB_palettes(palette = \"discrete_5\")(5) #> [1] \"#8DAE10\" \"#BBCE70\" \"#E7E7E7\" \"#99AEBF\" \"#003560\"  # Retrieve ten colors, five of which are extrapolated, from the palette  # \"discrete_5\". get_RUB_palettes(palette = \"discrete_5\")(10) #>  [1] \"#8DAE10\" \"#A1BC3A\" \"#B5CA65\" \"#C9D697\" \"#DDE1CC\" \"#D5DADE\" \"#B3C1CC\" #>  [8] \"#88A0B4\" \"#446A8A\" \"#003560\""},{"path":"/articles/RUB_colors.html","id":"plots-for-the-continuous-palettes","dir":"Articles","previous_headings":"","what":"Plots for the continuous palettes","title":"Using RUB colors","text":"First , two continuous palettes, “continuous” “continuous_diverging”.","code":"plot(prismatic::color(RUBer::get_RUB_palettes(palette = \"continuous\")(100))) plot(prismatic::color(RUBer::get_RUB_palettes(palette = \"continuous_diverging\")(100)))"},{"path":"/articles/RUB_colors.html","id":"plots-for-the-numbered-discrete-palettes","dir":"Articles","previous_headings":"","what":"Plots for the numbered discrete palettes","title":"Using RUB colors","text":"Second, numbered discrete palettes, , example, used display distribution answers survey items. numbered discrete palettes pre-defined total eight separate colors, , necessary rely extrapolation.","code":"plot(prismatic::color(get_RUB_palettes(palette = \"discrete_1\")(1))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_2\")(2))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_3\")(3))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_4\")(4))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_5\")(5))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_6\")(6))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_7\")(7))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_8\")(8))) # If you need more than eight unique colors, simply increase the number of # requested colors in the function call like this: plot(prismatic::color(get_RUB_palettes(palette = \"discrete_8\")(16)))"},{"path":"/articles/RUB_colors.html","id":"plots-for-the-discrete-palettes","dir":"Articles","previous_headings":"","what":"Plots for the discrete palettes","title":"Using RUB colors","text":"Last, turned unqiue colors RUB corporate design guide one awfully looking palette simply called “discrete”. Avert eyes, possible! second palette, “discrete_contrast” four colors form nice contrast base RUB colors, .e. Green Blue.","code":"plot(prismatic::color(get_RUB_palettes(palette = \"discrete\")(7))) plot(prismatic::color(get_RUB_palettes(palette = \"discrete_contrast\")(4)))"},{"path":"/articles/RUB_colors.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"Further Reading","title":"Using RUB colors","text":"implementation heavily indebted Simon Jackson’s great article color palettes ggplot2. moment, University Bochum really anything like Data Visualization Style Guide. Simon Jackson - Creating corporate colour palettes ggplot2 Lisa Charlotte Rost - Friendly Guide Colors Data Visualisation Emil Hvitfeldt’s Prismatic Package Emily Riederer’s Rtistic Package Amy Cesal - Data Visualization Style Guidelines","code":""},{"path":"/articles/RUB_plot.html","id":"figure-types","dir":"Articles","previous_headings":"","what":"Figure Types","title":"Using the RUB plotting functions","text":"Available figure types: Vertical stacked bar charts Vertical stacked bar charts scaled 100% Horizontal stacked bar charts scaled 100% Line Chart combination vertical stacked bar charts (type 1) line charts (type 4)","code":""},{"path":"/articles/RUB_plot.html","id":"figure-type-1---vertical-stacked-bar-charts","dir":"Articles","previous_headings":"","what":"Figure Type 1 - Vertical stacked bar charts","title":"Using the RUB plotting functions","text":"plotting vertical stacked bar charts, use RUBer::rub_plot_type_1. Three variable names mandatory: x_var x-coordinate, y_var y-coordinate fill_var fill variable, determines groups stacked. Consider example:  Next complex example, additionally provide label y-axis, y_label caption indicating source data, caption. default, caption prefix “Quelle:”, change German English using parameter caption_prefix. also want suppress value label Master students spring term 2017, value small. default, labels values accounting less 4% total value suppressed. case, seven students account 7/(7+122) = 5.4% total value, increase value filter_cutoff default 0.04 0.06.  third example adds even parameters. can facet figure discrete variable, facet_var, order make direct comparisons groups, e.g. different departments. can also change figure’s default color color, default font base_family, size text elements base_size (see documentation RUBer::theme_rub()).","code":"# Create test values for all three mandatory variables (x_var, y_var, fill_var). df_t1_ex1 <- tibble::tribble(    ~term, ~students, ~degree,    \"Spring '13\", 120, \"Bachelor 1-Subject\",    \"Spring '14\", 105, \"Bachelor 1-Subject\",    \"Spring '15\", 124, \"Bachelor 1-Subject\",    \"Spring '16\", 114, \"Bachelor 1-Subject\",    \"Spring '17\", 122, \"Bachelor 1-Subject\",    \"Spring '13\", 121, \"Master 1-Subject\",    \"Spring '14\", 129, \"Master 1-Subject\",    \"Spring '15\", 122, \"Master 1-Subject\",    \"Spring '16\", 168, \"Master 1-Subject\",    \"Spring '17\", 7, \"Master 1-Subject\", )  # The data source is df_t1_ex1, x_var is mapped to term, y_var to students, and # the fill_var to degree. rub_plot_type_1(   df = df_t1_ex1,   x_var = term,   y_var = students,   fill_var = degree #  ,fill_reverse = TRUE #  ,palette_reverse = TRUE ) # Create test values for all three mandatory variables (x_var, y_var, fill_var). df_t1_ex2 <- tibble::tribble(    ~term, ~students, ~degree,    \"Spring '13\", 120, \"Bachelor 1-Subject\",    \"Spring '14\", 105, \"Bachelor 1-Subject\",    \"Spring '15\", 124, \"Bachelor 1-Subject\",    \"Spring '16\", 114, \"Bachelor 1-Subject\",    \"Spring '17\", 122, \"Bachelor 1-Subject\",    \"Spring '13\", 121, \"Master 1-Subject\",    \"Spring '14\", 129, \"Master 1-Subject\",    \"Spring '15\", 122, \"Master 1-Subject\",    \"Spring '16\", 168, \"Master 1-Subject\",    \"Spring '17\", 7, \"Master 1-Subject\" )  # Set values for parameters setting the y-axis title, captioning the source data # and filtering small value labels (all labels below 6% of the stacked total). rub_plot_type_1(   df = df_t1_ex2,   x_var = term,   y_var = students,   fill_var = degree,   y_axis_label = \"Students (1st degree program, 1st and 2nd field of study)\",   caption = \"Information management system of the University of Bochum\",   caption_prefix = \"Source:\",   filter_cutoff = 0.06 #  ,fill_reverse = TRUE #  ,palette_reverse = TRUE ) # Create test values for all three mandatory variables (x_var, y_var, fill_var) # and the optional facet variable (facet_var). df_t1_ex3 <- tibble::tribble(    ~term, ~students, ~degree, ~department,     \"Spring '13\", 120, \"Bachelor 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '14\", 105, \"Bachelor 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '15\", 124, \"Bachelor 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '16\", 114, \"Bachelor 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '17\", 122, \"Bachelor 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '13\", 121, \"Master 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '14\", 129, \"Master 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '15\", 122, \"Master 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '16\", 168, \"Master 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '17\", 7, \"Master 1-Subject\", \"Department of Mathematics and Statistics\",    \"Spring '13\", 44, \"Bachelor 1-Subject\", \"Department of Philosophy\",    \"Spring '14\", 55, \"Bachelor 1-Subject\", \"Department of Philosophy\",    \"Spring '15\", 60, \"Bachelor 1-Subject\", \"Department of Philosophy\",    \"Spring '16\", 40, \"Bachelor 1-Subject\", \"Department of Philosophy\",    \"Spring '17\", 35, \"Bachelor 1-Subject\", \"Department of Philosophy\",    \"Spring '13\", 90, \"Master 1-Subject\", \"Department of Philosophy\",    \"Spring '14\", 95, \"Master 1-Subject\", \"Department of Philosophy\",    \"Spring '15\", 88, \"Master 1-Subject\", \"Department of Philosophy\",    \"Spring '16\", 85, \"Master 1-Subject\", \"Department of Philosophy\",    \"Spring '17\", 92, \"Master 1-Subject\", \"Department of Philosophy\" )  # Facet by department, which effectively leads to two plots in one figure. The # default font is changed to RUB Scala TZ, the main color is changed from # RUB blue to dark red, and the size is increased from 11 to 14. rub_plot_type_1(   df = df_t1_ex3,   x_var = term,   y_var = students,   fill_var = degree,   y_axis_label = \"Students (1st degree program, 1st and 2nd field of study)\",   caption = \"Information management system of the University of Bochum\",   caption_prefix = \"Source:\",   filter_cutoff = 0.06,   facet_var = department,   color = RUB_colors[\"dark red\"],   base_family = \"RUB Scala TZ\",   base_size = 14 #  ,fill_reverse = TRUE #  ,palette_reverse = TRUE )"},{"path":"/articles/RUB_plot.html","id":"figure-type-2---vertical-stacked-bar-charts-scaled-to-100","dir":"Articles","previous_headings":"","what":"Figure Type 2 - Vertical stacked bar charts scaled to 100%","title":"Using the RUB plotting functions","text":"Figure type 2, plotted RUBer::rub_plot_type_2, similar type 1. main differences y-axis uses percentage scale rather absolute one stacked bars scaled 100%. Like figure type 1, three variable names mandatory: x_var x-coordinate, y_var y-coordinate fill_var fill variable, determines groups stacked.  Now let us say unhappy default ordering stacked bars, want largest cohort group, still studying, top. can use boolean parameter fill_reverse just . also provide discrete facetting variable, facet_var, text caption caption_prefix, lower threshhold filter_cutoff, leading labels displayed.","code":"# Create test values for all three mandatory variables (x_var, y_var, fill_var) df_t2_ex1 <- tibble::tribble(    ~cohort_term, ~status_percentage, ~cohort_status,     \"2. cohort term\", 0.9513551740, \"Studying\",    \"2. cohort term\", 0.0029748098, \"Changed subject\",    \"2. cohort term\", 0.0004673679, \"Graduated\",    \"2. cohort term\", 0.0186648938, \"Disenrolled without degree\",    \"2. cohort term\", 0.0265377545, \"Dropped subject\",    \"4. cohort term\", 0.8896149868, \"Studying\",    \"4. cohort term\", 0.0616919929, \"Changed subject\",    \"4. cohort term\", 0.0016484686, \"Graduated\",    \"4. cohort term\", 0.0201024499, \"Disenrolled without degree\",    \"4. cohort term\", 0.0269421019, \"Dropped subject\",    \"6. cohort term\", 0.7901183540, \"Studying\",    \"6. cohort term\", 0.1502641318, \"Changed subject\",    \"6. cohort term\", 0.0074548056, \"Graduated\",    \"6. cohort term\", 0.0243490259, \"Disenrolled without degree\",    \"6. cohort term\", 0.0278136827, \"Dropped subject\",    \"8. cohort term\", 0.6115873010, \"Studying\",    \"8. cohort term\", 0.2961468339, \"Changed subject\",    \"8. cohort term\", 0.0104080044, \"Graduated\",    \"8. cohort term\", 0.0274549015, \"Disenrolled without degree\",    \"8. cohort term\", 0.0544029593, \"Dropped subject\", )  rub_plot_type_2(   df = df_t2_ex1,   x_var = cohort_term,   y_var = status_percentage,   fill_var = cohort_status   # ,fill_reverse = TRUE   # ,palette_reverse = TRUE ) df_t2_ex2 <- tibble::tribble(    ~cohort_term, ~status_percentage, ~cohort_status, ~cohort_label,     \"2. cohort term\", 0.9513551740, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"2. cohort term\", 0.0029748098, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"2. cohort term\", 0.0004673679, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"2. cohort term\", 0.0186648938, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"2. cohort term\", 0.0265377545, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"4. cohort term\", 0.8896149868, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"4. cohort term\", 0.0616919929, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"4. cohort term\", 0.0016484686, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"4. cohort term\", 0.0201024499, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"4. cohort term\", 0.0269421019, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"6. cohort term\", 0.7901183540, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"6. cohort term\", 0.1502641318, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"6. cohort term\", 0.0074548056, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"6. cohort term\", 0.0243490259, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"6. cohort term\", 0.0278136827, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"8. cohort term\", 0.6115873010, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"8. cohort term\", 0.2961468339, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"8. cohort term\", 0.0104080044, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"8. cohort term\", 0.0274549015, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"8. cohort term\", 0.0544029593, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2011 (n=222)\",    \"2. cohort term\", 0.769899396, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"2. cohort term\", 0.173399178, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"2. cohort term\", 0.034702328, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"2. cohort term\", 0.006062833, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"2. cohort term\", 0.015936266, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"4. cohort term\", 0.769421630, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"4. cohort term\", 0.173700319, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"4. cohort term\", 0.034742910, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"4. cohort term\", 0.006156721, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"4. cohort term\", 0.015978420, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"6. cohort term\", 0.667217426, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"6. cohort term\", 0.228271544, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"6. cohort term\", 0.065634578, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"6. cohort term\", 0.010729695, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"6. cohort term\", 0.028146757, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"8. cohort term\", 0.511075289, \"Studying\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"8. cohort term\", 0.353166732, \"Changed subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"8. cohort term\", 0.073315208, \"Graduated\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"8. cohort term\", 0.026374195, \"Disenrolled without degree\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\",    \"8. cohort term\", 0.036068576, \"Dropped subject\", \"Bachelor 1-Subject: Starting cohort fall 2012 (n=240)\", )  rub_plot_type_2(   df = df_t2_ex2,   x_var = cohort_term,   y_var = status_percentage,   fill_var = cohort_status,   facet_var = cohort_label,   filter_cutoff = 0.05,   caption = \"Comparison of two fictitious cohorts\",   caption_prefix = \"Source:\"   ,fill_reverse = TRUE )"},{"path":"/articles/RUB_plot.html","id":"figure-type-3---horizontal-stacked-bar-charts-scaled-to-100","dir":"Articles","previous_headings":"","what":"Figure Type 3 - Horizontal stacked bar charts scaled to 100%","title":"Using the RUB plotting functions","text":"Figure type 3, plotted RUBer::rub_plot_type_3, similar figure type 2, exception stacked bar charts plotted horizontally. first two figure types, three variable names mandatory: x_var x-coordinate, y_var y-coordinate fill_var fill variable, determines groups stacked.  second example adds facetting variable, fill_var, plotting direct comparisons groups. also use caption, caption_prefix, filter_cutoff suppresses values 20%, increase text size 12.","code":"# Create test values for all three mandatory variables (x_var, y_var, fill_var) df_t3_ex1 <- tibble::tribble(    ~survey_group, ~item_value, ~item_value_percentage,    \"Bachelor 1-Subject (n=400)\", \"Exceeded prescribed period of study\", 0.3070448,    \"Bachelor 1-Subject (n=400)\", \"Within prescribed period of study\", 0.6929552,    \"SG Bachelor 1-Subject (n=669)\", \"Exceeded prescribed period of study\", 0.1122486,    \"SG Bachelor 1-Subject (n=669)\", \"Within prescribed period of study\", 0.8877514 )  rub_plot_type_3(    df = df_t3_ex1,    x_var = item_value_percentage,    y_var = survey_group,    fill_var = item_value  # ,fill_reverse = TRUE ) df_t3_ex2 <- tibble::tribble(    ~survey_group, ~item_value, ~item_value_percentage, ~degree,    \"Bachelor 1-Subject (n=400)\", \"Exceeded prescribed period of study\", 0.30, \"Bachelor 1-Subject\",    \"Bachelor 1-Subject (n=400)\", \"Within prescribed period of study\", 0.60, \"Bachelor 1-Subject\",    \"SG Bachelor 1-Subject (n=726)\", \"Exceeded prescribed period of study\", 0.1122486, \"Bachelor 1-Subject\",    \"SG Bachelor 1-Subject (n=726)\", \"Within prescribed period of study\", 0.8877514, \"Bachelor 1-Subject\",    \"Master 1-Subject (n=369)\", \"Exceeded prescribed period of study\", 0.1416009, \"Master 1-Subject\",    \"Master 1-Subject (n=369)\", \"Within prescribed period of study\", 0.8583991, \"Master 1-Subject\",    \"SG Master 1-Subject (n=669)\", \"Exceeded prescribed period of study\", 0.4417682, \"Master 1-Subject\",    \"SG Master 1-Subject (n=669)\", \"Within prescribed period of study\", 0.5582318, \"Master 1-Subject\" )  rub_plot_type_3(    df = df_t3_ex2,    x_var = item_value_percentage,    y_var = survey_group,    fill_var = item_value,    facet_var = degree,    caption = \"Graduate survey 2017/18\",    caption_prefix = \"Source:\",    filter_cutoff = 0.20,    base_size = 12 )"},{"path":"/articles/RUB_plot.html","id":"changing-ordering","dir":"Articles","previous_headings":"Figure Type 3 - Horizontal stacked bar charts scaled to 100%","what":"Changing ordering","title":"Using the RUB plotting functions","text":"last example , ordering fill variable, item_value, going bad (“Exceeded prescribed period study”) good (“Within prescribed period study”). , default, fill variable ordered alphabetically factor. want fill variable ordered way? can use optional boolean parameter fill_reverse change ordering fill variable legend.  simply want reverse order legend items, without actually reversing order stacked bar segments, can use optional parameter legend_reverse instead.  want use custom ordering fill variable? Consider following example:  , neither want alphabetic ordering, reverse. Instead, prefer alphabetic ordering item_value “Unknown” always coming last. , can explicitly turn fill_var factor predetermined ordering. plotting function respect ordering.","code":"# Reversed fill, reversed legend rub_plot_type_3(    df = df_t3_ex2,    x_var = item_value_percentage,    y_var = survey_group,    fill_var = item_value,    facet_var = degree,    caption = \"Graduate survey 2017/18\",    caption_prefix = \"Source:\",    filter_cutoff = 0.20,    base_size = 12,    fill_reverse = TRUE ) # Reversed legend rub_plot_type_3(    df = df_t3_ex2,    x_var = item_value_percentage,    y_var = survey_group,    fill_var = item_value,    facet_var = degree,    caption = \"Graduate survey 2017/18\",    caption_prefix = \"Source:\",    filter_cutoff = 0.20,    base_size = 12, #  legend_reverse = TRUE ) df_t3_ex4 <- tibble::tribble(    ~survey_group, ~item_value, ~item_value_percentage, ~degree,    \"Bachelor 1-Subject (n=400)\", \"Exceeded prescribed period of study\", 0.30, \"Bachelor 1-Subject\",    \"Bachelor 1-Subject (n=400)\", \"Within prescribed period of study\", 0.60, \"Bachelor 1-Subject\",       \"Bachelor 1-Subject (n=400)\", \"Unknown\", 0.10, \"Bachelor 1-Subject\",    \"SG Bachelor 1-Subject (n=726)\", \"Exceeded prescribed period of study\", 0.11, \"Bachelor 1-Subject\",    \"SG Bachelor 1-Subject (n=726)\", \"Within prescribed period of study\", 0.77, \"Bachelor 1-Subject\",       \"SG Bachelor 1-Subject (n=726)\", \"Unknown\", 0.12, \"Bachelor 1-Subject\",    \"Master 1-Subject (n=369)\", \"Exceeded prescribed period of study\", 0.12, \"Master 1-Subject\",    \"Master 1-Subject (n=369)\", \"Within prescribed period of study\", 0.83, \"Master 1-Subject\",       \"Master 1-Subject (n=369)\", \"Unknown\", 0.04, \"Master 1-Subject\",    \"SG Master 1-Subject (n=669)\", \"Exceeded prescribed period of study\", 0.44, \"Master 1-Subject\",    \"SG Master 1-Subject (n=669)\", \"Within prescribed period of study\", 0.50, \"Master 1-Subject\",    \"SG Master 1-Subject (n=669)\", \"Unknown\", 0.05, \"Master 1-Subject\" )  rub_plot_type_3(    df = df_t3_ex4,    x_var = item_value_percentage,    y_var = survey_group,    fill_var = item_value,    facet_var = degree,    caption = \"Graduate survey 2017/18\",    caption_prefix = \"Source:\", #   ,fill_reverse = TRUE ) # Take the data from previous example df_t3_ex5 <- df_t3_ex4  # Turn the column \"item_value\" into a factor df_t3_ex5[[\"item_value\"]] <- factor(df_t3_ex5[[\"item_value\"]])  # Examine the levels, default is alphabetic ordering levels(df_t3_ex5[[\"item_value\"]]) #> [1] \"Exceeded prescribed period of study\" \"Unknown\"                             #> [3] \"Within prescribed period of study\"  # Make sure that level unknown always comes last df_t3_ex5[[\"item_value\"]] <- forcats::fct_relevel(    df_t3_ex5[[\"item_value\"]],    c(\"Unknown\"),    after = Inf )  # Check new ordering levels(df_t3_ex5[[\"item_value\"]]) #> [1] \"Exceeded prescribed period of study\" \"Within prescribed period of study\"   #> [3] \"Unknown\"  # Plot rub_plot_type_3(    df = df_t3_ex5,    x_var = item_value_percentage,    y_var = survey_group,    fill_var = item_value,    facet_var = degree,    caption = \"Graduate survey 2017/18\",    caption_prefix = \"Source:\" )"},{"path":"/articles/RUB_plot.html","id":"figure-type-4---line-charts","dir":"Articles","previous_headings":"","what":"Figure Type 4 - Line Charts","title":"Using the RUB plotting functions","text":"","code":"rub_plot_type_4(   df = df_t1_ex1,   x_var = term,   y_var = students,   group_var = degree,   y_axis_label = \"Students (1st degree program, 1st and 2nd field of study)\",   caption = \"Information management system of the University of Bochum\",   caption_prefix = \"Source:\",   filter_cutoff = 10,   base_size = 14 ) rub_plot_type_4(   df = df_t1_ex3,   x_var = term,   y_var = students,   group_var = degree,   facet_var = department,   y_axis_label = \"Students (1st degree program, 1st and 2nd field of study)\",   caption = \"Information management system of the University of Bochum\",   caption_prefix = \"Source:\",   filter_cutoff = 5 ) df_t5_ex1 <- tibble::tribble(    ~term, ~students, ~degree, ~group, ~figure_type_id,    \"Spring '13\", 120, \"Bachelor 1-Subject\", NA_character_, 1L,    \"Spring '14\", 105, \"Bachelor 1-Subject\", NA_character_, 1L,    \"Spring '15\", 124, \"Bachelor 1-Subject\", NA_character_, 1L,    \"Spring '16\", 114, \"Bachelor 1-Subject\", NA_character_, 1L,    \"Spring '17\", 122, \"Bachelor 1-Subject\", NA_character_, 1L,    \"Spring '13\", 121, \"Master 1-Subject\", NA_character_, 1L,    \"Spring '14\", 129, \"Master 1-Subject\", NA_character_, 1L,    \"Spring '15\", 122, \"Master 1-Subject\", NA_character_, 1L,    \"Spring '16\", 168, \"Master 1-Subject\", NA_character_, 1L,    \"Spring '17\", 7, \"Master 1-Subject\", NA_character_, 1L,    \"Spring '13\", 20, NA_character_, \"Freshman students\", 4L,    \"Spring '14\", 30, NA_character_, \"Freshman students\", 4L,    \"Spring '15\", 41, NA_character_, \"Freshman students\", 4L,    \"Spring '16\", 27, NA_character_, \"Freshman students\", 4L,    \"Spring '17\", 35, NA_character_, \"Freshman students\", 4L )  rub_plot_type_1_and_4(    df = df_t5_ex1,    x_var = term,    y_var = students,    fill_var = degree,    group_var = group )"},{"path":"/articles/RUB_plot.html","id":"for-experienced-ggplot2-users","dir":"Articles","previous_headings":"","what":"For experienced ggplot2 users","title":"Using the RUB plotting functions","text":"level flexibility customizability achievable plotting functions RUBer limited. point, makes sense properly learn ggplot2 use individual components directly (scales, colors, etc.). See resources section help getting started ggplot2.","code":""},{"path":"/articles/RUB_plot.html","id":"applying-the-rub-theme","dir":"Articles","previous_headings":"","what":"Applying the RUB Theme","title":"Using the RUB plotting functions","text":"function theme_rub normal ggplot2::theme() function based ggplot2::theme_minimal(). can use ggplot object:","code":"# Base plot ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = mpg,       y = disp,       color = as.factor(carb)    ) ) +     ggplot2::geom_point() +    theme_rub()"},{"path":"/articles/RUB_plot.html","id":"scale-functions","dir":"Articles","previous_headings":"","what":"Scale Functions","title":"Using the RUB plotting functions","text":"RUB palettes used corresponding scale functions. Currently, (1) scale_color_rub (wrapper ggplot2::discrete_scale() discrete, ggplot2::scale_color_gradientn() continuous) (2) scale_fill_rub (wrapper ggplot2::discrete_scale() discrete, ggplot2::scale_fill_gradientn() continuous) implemented. Use scale functions ensure appropriate RUB palettes colors used.    Continuous scales used setting discrete FALSE providing name continuous palette palette (see vignette(\"RUB_colors\")).","code":"# Basic themed plot with discrete scale function ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = mpg,       y = disp,       color = as.factor(carb)       )    ) +     ggplot2::geom_point() +    scale_color_rub(       palette = \"discrete\"    ) +    theme_rub() # By default, the theme shows no axis labels and no legend title. Use the  # boolean parameters x_axis_label, y_axis_label and legend_title to activate  # them. ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = mpg,       y = disp,       color = as.factor(carb)    ) ) +     ggplot2::geom_point() +    scale_color_rub(       palette = \"discrete\"    ) +    theme_rub(       x_axis_label = TRUE,       y_axis_label = TRUE,       legend_title = FALSE    ) # Reverse the color palette by setting reverse to TRUE in the scale function ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = mpg,       y = disp,       color = as.factor(carb)    ) ) +     ggplot2::geom_point() +    scale_color_rub(       palette = \"discrete\",       reverse = TRUE    ) +    theme_rub(       x_axis_label = TRUE,       y_axis_label = TRUE,       legend_title = FALSE    ) # Basic plot with continuous scale function ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = mpg,       y = disp,       color = disp    ) ) +     ggplot2::geom_point() +    scale_color_rub(       palette = \"continuous\",       discrete = FALSE    ) +    theme_rub(       x_axis_label = TRUE,       y_axis_label = TRUE,       legend_title = TRUE    ) # Reverse the color palette by setting reverse to TRUE in the scale function ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = mpg,       y = disp,       color = disp    ) ) +     ggplot2::geom_point() +    scale_color_rub(       palette = \"continuous\",       discrete = FALSE,       reverse = TRUE    ) +    theme_rub(       x_axis_label = TRUE,       y_axis_label = TRUE,       legend_title = TRUE    ) # Example of continuous_diverging palette ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = mpg,       y = disp,       color = disp    ) ) +     ggplot2::geom_point() +    scale_color_rub(       palette = \"continuous_diverging\",       discrete = FALSE    ) +    theme_rub(       x_axis_label = TRUE,       y_axis_label = TRUE,       legend_title = TRUE    ) ggplot2::ggplot(    data = mtcars,    ggplot2::aes(       x = as.factor(gear),       fill = as.factor(vs)       )    ) +     ggplot2::geom_bar() +    scale_fill_rub(       palette = \"discrete_2\"    )"},{"path":[]},{"path":"/articles/RUB_plot.html","id":"books","dir":"Articles","previous_headings":"","what":"Books","title":"Using the RUB plotting functions","text":"Data visualisation Graphics communication chapters R Data Science Garrett Grolemund Hadley Wickham, R Graphics Cookbook, 2nd Edition Winston Chang, Data Visualization - practical introduction Kieran Healy, ggplot2 - Elegant Graphics Data Analysis, 3rd Edition Hadley Wickham.","code":""},{"path":"/articles/RUB_plot.html","id":"presentations-and-tutorials","dir":"Articles","previous_headings":"","what":"Presentations and tutorials","title":"Using the RUB plotting functions","text":"Designing ggplots - making clear figures communicate Malcolm Barrett, ggplot2 Tutorial Beautiful Plotting R Cédric Scherer, Step--step examples building publication-quality figures ggplot2 Claus Wilke, Gentle Guide Grammar Graphics ggplot2 Garrick Aden-Buie.","code":""},{"path":"/articles/RUB_plot.html","id":"interactive-courses","dir":"Articles","previous_headings":"","what":"Interactive courses","title":"Using the RUB plotting functions","text":"R Studio Cloud Primer ggplot2.","code":""},{"path":"/articles/RUB_plot.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"Further Reading","title":"Using the RUB plotting functions","text":"BBC - bbplot package BBC Visual Data Journalism cookbook R graphics Dewey Dunnington rstudio::conf 2020 - Best practices programming ggplot2 gglot 2 vignette - Using ggplot2 packages","code":""},{"path":"/articles/reference_docx.html","id":"the-docx-reference-document","dir":"Articles","previous_headings":"","what":"The docx reference document","title":"Formatting for the reference docx document","text":"explained section 3.4 R Markdown: Definitive Guide, first step creating reference document produce .docx file using rmarkdown Pandoc. formatting layout document can edited saved. resulting reference document used YAML metadata R Markdown file. vignette intended track changes made rub_reference.docx file, changes reproducible documented.","code":""},{"path":[]},{"path":"/articles/reference_docx.html","id":"margins","dir":"Articles","previous_headings":"Page Layout","what":"Margins","title":"Formatting for the reference docx document","text":"Top: 2,5 cm Left: 1,5 cm Bottom: 2 cm Right: 2 cm Gutter: 0 cm Gutter position: Left","code":""},{"path":"/articles/reference_docx.html","id":"paper","dir":"Articles","previous_headings":"Page Layout","what":"Paper","title":"Formatting for the reference docx document","text":"Size: A4","code":""},{"path":"/articles/reference_docx.html","id":"layout","dir":"Articles","previous_headings":"Page Layout","what":"Layout","title":"Formatting for the reference docx document","text":"Different first page (x) edge: Header: 1 cm edge: Footer: 1,1 cm","code":""},{"path":[]},{"path":"/articles/reference_docx.html","id":"header","dir":"Articles","previous_headings":"Header and Footer","what":"Header","title":"Formatting for the reference docx document","text":"{ AUTHOR * MERGEFORMAT } { TITLE * MERGEFORMAT }","code":""},{"path":"/articles/reference_docx.html","id":"footer","dir":"Articles","previous_headings":"Header and Footer","what":"Footer","title":"Formatting for the reference docx document","text":"{ PAGE * MERGEFORMAT }","code":""},{"path":[]},{"path":"/articles/reference_docx.html","id":"title","dir":"Articles","previous_headings":"Styles","what":"Title","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Body Text Font: RubFlama, 26 pt, Bold, Font color: Custom Color(RGB(0;53;96)), Small caps Right: 1cm, Centered Space : 256 pt, : 12pt, Keep next, Keep lines together","code":""},{"path":"/articles/reference_docx.html","id":"author","dir":"Articles","previous_headings":"Styles","what":"Author","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : (style) Style following paragraphs: Body Text Font: RubFlama, 26 pt, Font color: Custom Color(RGB(141;174;16)), caps Right: 1 cm, Centered Line spacing: single Space : 10 pt, Widow/Orphan control, Keep next, Keep lines together","code":""},{"path":"/articles/reference_docx.html","id":"date","dir":"Articles","previous_headings":"Styles","what":"Date","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : (style) Style following paragraphs: Body Text Font: RubFlama, 16 pt, Font color: Custom Color(RGB(0;53;96)), Small caps Right: 1 cm, Right Line spacing: single Space : 256 pt, : 10 pt, Widow/Orphan control, Keep next, Keep lines together","code":""},{"path":"/articles/reference_docx.html","id":"toc-heading","dir":"Articles","previous_headings":"Styles","what":"TOC Heading","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Heading 1 Style following paragraphs: Body Text Indent left: 0 cm Indent first line: 0 cm Line spacing: Multiple 1,08 li Space : 12 pt, : 12 pt, None, bullets numbering","code":""},{"path":"/articles/reference_docx.html","id":"toc-1","dir":"Articles","previous_headings":"Styles","what":"TOC 1","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Normal Right: 1 cm, Left, Space : 5 pt Tab stops: 0,85 cm, Left + 17,48 cm, Right, Leader: …","code":""},{"path":"/articles/reference_docx.html","id":"heading-1","dir":"Articles","previous_headings":"Styles","what":"Heading 1","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Body Text Font: RubFlama, 14 pt, Bold, Font color: Custom Color(RGB(0;53;96)), caps Left: 0 cm Hanging: 1,02 cm, Left Space : 6 pt, Page break , Keep next, Keep lines together Level 1, Outline numbered + Level: 1 + Numbering Style: 1, 2, 3, … + Start : 1 + Alignment: Left + Aligned : 0 cm + Indent : 1,02 cm","code":""},{"path":"/articles/reference_docx.html","id":"heading-2","dir":"Articles","previous_headings":"Styles","what":"Heading 2","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Body Text Font: RubFlama, 14 pt, Font color: Custom Color(RGB(0;53;96)) Left: 0 cm Hanging: 1,02 cm, Left Space : 10 pt, : 0 pt, Keep next, Keep lines together, Level 2, Outline numbered + Level: 2 + Numbering Style: 1, 2, 3, … + Start : 1 + Alignment: Left + Aligned : 0 cm + Indent : 1,02 cm","code":""},{"path":"/articles/reference_docx.html","id":"heading-3","dir":"Articles","previous_headings":"Styles","what":"Heading 3","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Body Text Font: (Default) RubFlama, 14 pt, Font color: Custom Color(RGB(141;174;16)), Left Space : 10 pt, : 0 pt, Keep next, Keep lines together Level 3","code":""},{"path":"/articles/reference_docx.html","id":"heading-4","dir":"Articles","previous_headings":"Styles","what":"Heading 4","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Body Text Font: RubFlama, Font color: Custom Color(RGB(141;174;16)), Left Space : 10 pt, : 0 pt, Keep next, Keep lines together Level 4","code":""},{"path":"/articles/reference_docx.html","id":"heading-6","dir":"Articles","previous_headings":"Styles","what":"Heading 6","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Body Text -Font: (Default) RUB Scala MZ, 9 pt, Italic, - Space : 18 pt, Keep lines together Level 6","code":""},{"path":"/articles/reference_docx.html","id":"image-caption","dir":"Articles","previous_headings":"Styles","what":"Image Caption","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Caption Style following paragraphs: Image Caption Font: 12 pt, Italic, Font color: Custom Color(RGB(0;53;96)) Space : 0 pt, Keep next, Keep lines together","code":""},{"path":"/articles/reference_docx.html","id":"first-paragraph","dir":"Articles","previous_headings":"Styles","what":"First Paragraph","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Body Text Style following paragraphs: Body Text","code":""},{"path":"/articles/reference_docx.html","id":"body-text","dir":"Articles","previous_headings":"Styles","what":"Body Text","title":"Formatting for the reference docx document","text":"Style type: Linked (paragraph character) Style based : Normal Style following paragraphs: Body Text Space : 9 pt, : 9 pt","code":""},{"path":"/articles/reference_docx.html","id":"footnote-reference","dir":"Articles","previous_headings":"Styles","what":"Footnote Reference","title":"Formatting for the reference docx document","text":"Style type: Character Style based : Caption Char Font: RUB Scala TZ, 12 pt, Italic, Superscript","code":""},{"path":"/articles/reference_docx.html","id":"footnote-text","dir":"Articles","previous_headings":"Styles","what":"Footnote Text","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Normal Style following paragraphs: Footnote Text Font: 10 pt Space : 6 pt","code":""},{"path":"/articles/reference_docx.html","id":"header-1","dir":"Articles","previous_headings":"Styles","what":"Header","title":"Formatting for the reference docx document","text":"Style type: Linked (paragraph character) Style based : Normal Style following paragraphs: Header Space : 0 pt Tab stops: 16 cm, Right","code":""},{"path":"/articles/reference_docx.html","id":"footer-1","dir":"Articles","previous_headings":"Styles","what":"Footer","title":"Formatting for the reference docx document","text":"Style type: Linked (paragraph character) Style based : Normal Style following paragraphs: Footer Space : 0 pt Tab stops: 16 cm, Right","code":""},{"path":"/articles/reference_docx.html","id":"hyperlink","dir":"Articles","previous_headings":"Styles","what":"Hyperlink","title":"Formatting for the reference docx document","text":"Style type: Character Style based : Caption Char Font: RUB Scala TZ, 12 pt, Italic, Font color: Accent 1","code":""},{"path":"/articles/reference_docx.html","id":"compact","dir":"Articles","previous_headings":"Styles","what":"Compact","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Body Text Style following paragraphs: Compact Space : 1,8 pt, : 1,8 pt","code":""},{"path":"/articles/reference_docx.html","id":"captioned-figure","dir":"Articles","previous_headings":"Styles","what":"Captioned Figure","title":"Formatting for the reference docx document","text":"Style type: Paragraph Style based : Figure Style following paragraphs: Captioned Figure Space : 12 pt, : 0 pt, Keep next","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Meyer-Eppler. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Meyer-Eppler R (2022). RUBer: Parameterized Microsoft Word reports RUB corporate design. https://richardmeyer-eppler.github.io/RUBer, https://github.com/RichardMeyer-Eppler/RUBer.","code":"@Manual{,   title = {RUBer: Parameterized Microsoft Word reports in the RUB corporate design},   author = {Richard Meyer-Eppler},   year = {2022},   note = {https://richardmeyer-eppler.github.io/RUBer, https://github.com/RichardMeyer-Eppler/RUBer}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Parameterized Microsoft Word reports in the RUB corporate design","text":"RUBer R package created parameterized reporting according requirements Ruhr-Universität Bochum (RUB). far, package primarily used eigth (2018-19) ninth (2019-20) reporting cycle teaching (Lehrberichterstattung). package provides large example dataset containing fake values, R Markdown template RUB corporate design, preconfigured ggplot2 plotting functions, custom themes ggplot2 flextable, well functions making RUB corporate design colors available.","code":""},{"path":"/index.html","id":"main-features","dir":"","previous_headings":"","what":"Main features","title":"Parameterized Microsoft Word reports in the RUB corporate design","text":"R Markdown template use rmarkdown::draft. template uses knitr::knit_expand dynamically create code chunks containing figures, captions subcaptions based data frame passed parameter. packages officedown officer enable automatic numbering figures tables, insertion corresponding table contents, well various helpers post-processing features. Vectorized figures Microsoft’s Enhanced Metafile format using devEMF package. Five preconfigured ggplot2 plotting functions. custom ggplot2 theme, theme_rub. custom flextable theme. Word reference document RUB corporate design use R Markdown template. Functions access RUB color palette. Scale functions make RUB color palettes available ggplot2. dataset 249,492 rows, df_fake, illustrates used package 2018 create 64 reports total 3,024 unique figures. values dataset fake algorithmically generated, columns, though, identical confidential production dataset.","code":""},{"path":"/index.html","id":"guiding-design-principles","dir":"","previous_headings":"","what":"Guiding design principles","title":"Parameterized Microsoft Word reports in the RUB corporate design","text":"Output format paramterized reporting Microsoft Word, reports can shared edited widely possible. generated reports adhere RUB corporate design ready printing , adjustments layout content required. far possible, data manipulation done independently reporting steps. idea data passed R Markdown template can come source, just R. data wrangling eigth (2018-19) ninth (2019-20) reporting cycle teaching done R, requirement. need create alter datasets using Microsoft Excel, possible use datasets basis reporting functions RUBer.","code":""},{"path":"/index.html","id":"project-background","dir":"","previous_headings":"","what":"Project background","title":"Parameterized Microsoft Word reports in the RUB corporate design","text":"Every three years, teaching program quality degree programs University Bochum assessed (Lehrberichterstattung). university administration assists process providing data reports combine descriptive higher education statistics survey data. University Bochum regularly collects survey data study entry phase (Studieneingangsbefragung), mid-study (Studienverlaufsbefragung) graduates (AbsolventInnenbefragung, collected nationwide Graduate Survey Cooperation Project (KOAB)). Previously, data reports, rich data sources analyzed visualized hand. RUBer automates process, creating large numbers print-ready reports Microsoft Word.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Parameterized Microsoft Word reports in the RUB corporate design","text":"Install development version GitHub :","code":"# If package \"remotes\" is not installed, install it first: # install.packages(\"remotes\")  # Install RUBer from Github remotes::install_github(   repo = \"RichardMeyer-Eppler/RUBer\",   build_vignettes = TRUE   )"},{"path":"/reference/RUB_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"RUB colors — RUB_colors","title":"RUB colors — RUB_colors","text":"available RUB colors defined corporate design.","code":""},{"path":"/reference/RUB_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RUB colors — RUB_colors","text":"","code":"RUB_colors"},{"path":"/reference/RUB_colors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RUB colors — RUB_colors","text":"object class character length 19.","code":""},{"path":"/reference/RUB_colors.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RUB colors — RUB_colors","text":"https://www.ruhr-uni-bochum.de/cd/","code":""},{"path":"/reference/RUB_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RUB colors — RUB_colors","text":"","code":"RUB_colors[\"green\"] #>     green  #> \"#8DAE10\""},{"path":"/reference/RUB_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"RUB color palette — RUB_palettes","title":"RUB color palette — RUB_palettes","text":"color palette using colors defined corporate design.","code":""},{"path":"/reference/RUB_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RUB color palette — RUB_palettes","text":"","code":"RUB_palettes"},{"path":"/reference/RUB_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RUB color palette — RUB_palettes","text":"object class list length 12.","code":""},{"path":"/reference/RUB_palettes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RUB color palette — RUB_palettes","text":"https://www.ruhr-uni-bochum.de/cd/","code":""},{"path":"/reference/RUB_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RUB color palette — RUB_palettes","text":"","code":"RUB_palettes[\"discrete_5\"] #> $discrete_5 #>      green   green_60 light grey    blue_40       blue  #>  \"#8DAE10\"  \"#BBCE70\"  \"#E7E7E7\"  \"#99AEBF\"  \"#003560\"  #>"},{"path":"/reference/RUBer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RUBer: Parameterized Microsoft Word reports in the RUB corporate design — RUBer-package","title":"RUBer: Parameterized Microsoft Word reports in the RUB corporate design — RUBer-package","text":"RUBer R package created parameterized reporting     according requirements Ruhr-Universität Bochum (RUB).     package provides large example dataset containing fake values,     R Markdown template RUB corporate design, preconfigured     ggplot2 plotting functions, custom themes ggplot2 flextable,     well functions making RUB corporate design colors available.","code":""},{"path":[]},{"path":"/reference/RUBer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RUBer: Parameterized Microsoft Word reports in the RUB corporate design — RUBer-package","text":"Maintainer: Richard Meyer-Eppler richard.meyer-eppler@uv.ruhr-uni-bochum.de","code":""},{"path":"/reference/add_label_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Add centered y-coordinates for filtered data labels of figure types 1 and 2 — add_label_position","title":"Add centered y-coordinates for filtered data labels of figure types 1 and 2 — add_label_position","text":"Calculates y-coordinates stacked bar charts, centered group. default function work labels filtered.","code":""},{"path":"/reference/add_label_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add centered y-coordinates for filtered data labels of figure types 1 and 2 — add_label_position","text":"","code":"add_label_position(   df,   x_var,   y_var,   facet_var = NULL,   fill_var,   filter_cutoff = 0.05,   fill_reverse = FALSE,   is_percentage = FALSE )"},{"path":"/reference/add_label_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add centered y-coordinates for filtered data labels of figure types 1 and 2 — add_label_position","text":"df Data frame x_var Required variable name variable containing discrete x-coordinates. y_var Required variable name variable containing continuous y-coordinates. facet_var Optional variable name discrete variable facet , defaults NULL. fill_var Variable name discrete variable determines groups stacked, e.g. degree. filter_cutoff Optional cutoff value suppression data labels. default, values 0.04 total value stacked bar chart suppressed. fill_reverse Boolean indicating whether order fill variable reversed, defaults FALSE. is_percentage Optional boolean indicating whether value label expressed absolute numbers percentage, defaults false","code":""},{"path":"/reference/add_label_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add centered y-coordinates for filtered data labels of figure types 1 and 2 — add_label_position","text":"Data frame additional column \"label_\" + name y-coordinate variable","code":""},{"path":"/reference/add_label_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add centered y-coordinates for filtered data labels of figure types 1 and 2 — add_label_position","text":"","code":"if (FALSE) { add_label_position(df, x_var, y_var, fill) }"},{"path":"/reference/add_rub_plot_type_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function — add_rub_plot_type_4","title":"Helper Function — add_rub_plot_type_4","text":"Helper Function","code":""},{"path":"/reference/add_rub_plot_type_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function — add_rub_plot_type_4","text":"","code":"add_rub_plot_type_4(   df_t4,   x_var,   y_var,   group_var,   group_label = NULL,   base_size = 11,   base_family = \"RubFlama\",   color = RUB_colors[\"blue\"],   palette_reverse = FALSE,   legend_columns = 5 )"},{"path":"/reference/add_rub_plot_type_4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function — add_rub_plot_type_4","text":"df_t4 Data frame x_var Required variable name variable containing discrete x-coordinates. y_var Required variable name variable containing continuous y-coordinates. group_var Variable name discrete variable determines groups forming one line, e.g. degree_id. group_label Optional variable name character variable containing names group variable (e.g. degree_txt), defaults #'     NULL. base_size base font size, defaults 11 base_family base font family, defaults RubFlama color Color font borders, defaults RUB_colors[\"blue\"], .e. #003560. palette_reverse Optional boolean indicating whether colors palette reversed, defaults FALSE.","code":""},{"path":"/reference/add_rub_plot_type_4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function — add_rub_plot_type_4","text":"List ggplot2 expressions","code":""},{"path":"/reference/add_rub_plot_type_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function — add_rub_plot_type_4","text":"","code":"if (FALSE) { add_rub_plot_type_4(df, x, y, group, group_label) }"},{"path":"/reference/df_fake.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake data set illustrating the use of the RUBer parameterized\nreporting package. — df_fake","title":"Fake data set illustrating the use of the RUBer parameterized\nreporting package. — df_fake","text":"data values data set algorithmically generated. exception, though, data set closely resembles confidential data package developed . contains data generate 64 reports varying numbers figures .","code":""},{"path":"/reference/df_fake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake data set illustrating the use of the RUBer parameterized\nreporting package. — df_fake","text":"","code":"df_fake"},{"path":"/reference/df_fake.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake data set illustrating the use of the RUBer parameterized\nreporting package. — df_fake","text":"data frame 249,492 rows 24 variables: report_nr price, US dollars figure_count weight diamond, carats x weight diamond, carats y weight diamond, carats y_label weight diamond, carats fill weight diamond, carats fill_label weight diamond, carats fill_reverse weight diamond, carats facet weight diamond, carats group weight diamond, carats group_label weight diamond, carats source_caption source figure's data, displayed bottom-right figure. Used caption argument call labs. question_txt question posed survey's respondents. Displayed figure, figure caption. figure_type_id ID determining type figure plot. Currently one four: 1 - stacked bar chart; 2 - vertical stacked bar chart scaled 100%; 3 - horizontal stacked bar chart scaled 100%, 4 - line chart. figure_caption figure caption displayed figure. heading level 1 heading figure, displayed corresponding boolean true. subheading level 2 heading figure, displayed corresponding boolean true. is_heading Determines whether level 1 heading printed figure. is_subheading Determines whether level 2 heading printed figure. report_author report author, appearing title page, header page. report_title report title, appearing title page, header page. file_name file name report nr. figure_filter_flag weight diamond, carats figure_height height figure.","code":""},{"path":"/reference/filter_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data frame based on report_nr column — filter_report","title":"Filter data frame based on report_nr column — filter_report","text":"Filter data frame based report_nr column","code":""},{"path":"/reference/filter_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data frame based on report_nr column — filter_report","text":"","code":"filter_report(df, report_nr)"},{"path":"/reference/filter_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data frame based on report_nr column — filter_report","text":"df Data frame report_nr Required integer indicating report_nr","code":""},{"path":"/reference/filter_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data frame based on report_nr column — filter_report","text":"Filtered data frame data report nr","code":""},{"path":"/reference/filter_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter data frame based on report_nr column — filter_report","text":"","code":"filter_report(df_fake, report_nr = 12) #> # A tibble: 3,425 × 24 #>    report_nr figure_count x          y     y_label  fill fill_label fill_reverse #>        <dbl>        <dbl> <chr>      <chr> <chr>   <int> <chr>      <lgl>        #>  1        12            1 WiSe 13/14 162   Studie…     2 Bachelor … FALSE        #>  2        12            1 WiSe 14/15 121   Studie…     2 Bachelor … FALSE        #>  3        12            1 WiSe 15/16 132   Studie…     2 Bachelor … FALSE        #>  4        12            1 WiSe 16/17 143   Studie…     2 Bachelor … FALSE        #>  5        12            1 WiSe 17/18 121   Studie…     2 Bachelor … FALSE        #>  6        12            1 WiSe 13/14 493   Studie…    20 Master 1-… FALSE        #>  7        12            1 WiSe 14/15 394   Studie…    20 Master 1-… FALSE        #>  8        12            1 WiSe 15/16 429   Studie…    20 Master 1-… FALSE        #>  9        12            1 WiSe 16/17 495   Studie…    20 Master 1-… FALSE        #> 10        12            1 WiSe 17/18 472   Studie…    20 Master 1-… FALSE        #> # … with 3,415 more rows, and 16 more variables: facet <chr>, group <int>, #> #   group_label <chr>, source_caption <chr>, question_txt <chr>, #> #   figure_type_id <int>, figure_caption <chr>, heading <chr>, #> #   subheading <chr>, is_heading <lgl>, is_subheading <lgl>, #> #   report_author <chr>, report_title <chr>, file_name <chr>, #> #   figure_filter_flag <lgl>, figure_height <dbl>"},{"path":"/reference/get_RUB_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract RUB palette colors as hex codes — get_RUB_colors","title":"Function to extract RUB palette colors as hex codes — get_RUB_colors","text":"Function extract RUB palette colors hex codes","code":""},{"path":"/reference/get_RUB_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract RUB palette colors as hex codes — get_RUB_colors","text":"","code":"get_RUB_colors(...)"},{"path":"/reference/get_RUB_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract RUB palette colors as hex codes — get_RUB_colors","text":"... Character names RUB palette colors","code":""},{"path":"/reference/get_RUB_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to extract RUB palette colors as hex codes — get_RUB_colors","text":"Vector specified color hex codes","code":""},{"path":"/reference/get_RUB_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to extract RUB palette colors as hex codes — get_RUB_colors","text":"","code":"get_RUB_colors(\"green\", \"blue\") #>     green      blue  #> \"#8DAE10\" \"#003560\"  get_RUB_colors(1, 3, 1) #>     green  green_60     green  #> \"#8DAE10\" \"#BBCE70\" \"#8DAE10\""},{"path":"/reference/get_RUB_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return function to interpolate a RUB color palette — get_RUB_palettes","title":"Return function to interpolate a RUB color palette — get_RUB_palettes","text":"Return function interpolate RUB color palette","code":""},{"path":"/reference/get_RUB_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return function to interpolate a RUB color palette — get_RUB_palettes","text":"","code":"get_RUB_palettes(palette = \"discrete\", reverse = FALSE, ...)"},{"path":"/reference/get_RUB_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return function to interpolate a RUB color palette — get_RUB_palettes","text":"palette Character name palette RUB_palettes reverse Optional boolean indicating whether palette reversed, defaults FALSE. ... Additional arguments pass colorRamp","code":""},{"path":"/reference/get_RUB_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return function to interpolate a RUB color palette — get_RUB_palettes","text":"Color palette","code":""},{"path":"/reference/get_RUB_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return function to interpolate a RUB color palette — get_RUB_palettes","text":"","code":"get_RUB_palettes(palette = \"continuous\") #> function (n)  #> { #>     x <- ramp(seq.int(0, 1, length.out = n)) #>     if (ncol(x) == 4L)  #>         rgb(x[, 1L], x[, 2L], x[, 3L], x[, 4L], maxColorValue = 255) #>     else rgb(x[, 1L], x[, 2L], x[, 3L], maxColorValue = 255) #> } #> <bytecode: 0x55e7ad9cd5b8> #> <environment: 0x55e7ad9cb628>"},{"path":"/reference/get_file_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file path for automatic report generation — get_file_path","title":"Get file path for automatic report generation — get_file_path","text":"Get file path automatic report generation","code":""},{"path":"/reference/get_file_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file path for automatic report generation — get_file_path","text":"","code":"get_file_path(   file_directory = \"output\",   file_name = fs::path_file(tempfile(fileext = \".docx\")) )"},{"path":"/reference/get_file_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file path for automatic report generation — get_file_path","text":"file_directory Optional string directory relative project folder file_name Required string containing file name file extension","code":""},{"path":"/reference/get_file_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file path for automatic report generation — get_file_path","text":"String file path","code":""},{"path":"/reference/get_file_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file path for automatic report generation — get_file_path","text":"","code":"get_file_path(file_name = \"test\") #> [1] \"/tmp/RtmpUQxPt2/file2c5e8bd3fd5/output/test\""},{"path":"/reference/get_label_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formula for calculating position of value labels — get_label_formula","title":"Get formula for calculating position of value labels — get_label_formula","text":"Get formula calculating position value labels","code":""},{"path":"/reference/get_label_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formula for calculating position of value labels — get_label_formula","text":"","code":"get_label_formula(label_var, is_percentage = FALSE)"},{"path":"/reference/get_label_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formula for calculating position of value labels — get_label_formula","text":"label_var name variable requiring value labels is_percentage Optional boolean indicating whether value label expressed absolute numbers percentage, defaults false","code":""},{"path":"/reference/get_label_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formula for calculating position of value labels — get_label_formula","text":"defused expression calculating position y-label","code":""},{"path":"/reference/get_label_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get formula for calculating position of value labels — get_label_formula","text":"","code":"if (FALSE) { get_label_formula(y_var = cyl, label_reverse = TRUE, is_percentage = FALSE) }"},{"path":"/reference/get_legend_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets number of legend columns based on the plot width and the text base size — get_legend_columns","title":"Gets number of legend columns based on the plot width and the text base size — get_legend_columns","text":"Gets number legend columns based plot width text base size","code":""},{"path":"/reference/get_legend_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets number of legend columns based on the plot width and the text base size — get_legend_columns","text":"","code":"get_legend_columns(   legend_text,   y_axis_text,   legend_key_width = plot_width/100,   legend_key_spacing = plot_width/100,   plot_width = 6.8,   base_size = 11,   base_family = \"RubFlama\" )"},{"path":"/reference/get_legend_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets number of legend columns based on the plot width and the text base size — get_legend_columns","text":"legend_text Vector legend text y_axis_text Vector text labels y axis legend_key_width Legend key width legend_key_spacing Legend key spacing plot_width Width plot inches, defaults 6.8 base_size base font size, defaults 11 base_family base font family, defaults RubFlama","code":""},{"path":"/reference/get_legend_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets number of legend columns based on the plot width and the text base size — get_legend_columns","text":"Numeric number columns legend","code":""},{"path":"/reference/get_legend_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets number of legend columns based on the plot width and the text base size — get_legend_columns","text":"","code":"get_legend_columns(   legend_text = c(     \"1 - eigener Verdienst\",     \"2 - Mittel der Eltern/Verwandten\",     \"3 - Förderung nach BAföG\",     \"4 - Stipendium\",     \"5 - Sonstiges\"   ),   y_axis_text = c(     \"Bachelor 2-Fächer (n=251)\",     \"FG Bachelor 2-Fächer (n=1.310)\"   ) ) #> [1] 1"},{"path":"/reference/get_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all unique values for a specified column in a data frame — get_unique","title":"Returns all unique values for a specified column in a data frame — get_unique","text":"Returns unique values specified column data frame","code":""},{"path":"/reference/get_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all unique values for a specified column in a data frame — get_unique","text":"","code":"get_unique(df, column)"},{"path":"/reference/get_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all unique values for a specified column in a data frame — get_unique","text":"df Data frame column Column name","code":""},{"path":"/reference/get_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all unique values for a specified column in a data frame — get_unique","text":"Vector unique values column, excluding NA","code":""},{"path":"/reference/get_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns all unique values for a specified column in a data frame — get_unique","text":"","code":"get_unique(df, report_nr) #> Error in get_unique(df, report_nr): could not find function \"get_unique\""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/plot_discrete_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Get discrete palette for the plot — plot_discrete_palette","title":"Get discrete palette for the plot — plot_discrete_palette","text":"moment, RUB_palettes discrete palettes eight unique colors. number, colors interpolated.","code":""},{"path":"/reference/plot_discrete_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get discrete palette for the plot — plot_discrete_palette","text":"","code":"plot_discrete_palette(colors_n)"},{"path":"/reference/plot_discrete_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get discrete palette for the plot — plot_discrete_palette","text":"colors_n Integer number requestes colors discrete palette.","code":""},{"path":"/reference/plot_discrete_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get discrete palette for the plot — plot_discrete_palette","text":"Name appropriate discrete palette RUB_palettes","code":""},{"path":"/reference/plot_discrete_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get discrete palette for the plot — plot_discrete_palette","text":"","code":"plot_discrete_palette(12) #> Error in plot_discrete_palette(12): could not find function \"plot_discrete_palette\""},{"path":"/reference/plot_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot RUB figure — plot_figure","title":"Plot RUB figure — plot_figure","text":"Plot RUB figure","code":""},{"path":"/reference/plot_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot RUB figure — plot_figure","text":"","code":"plot_figure(df)"},{"path":"/reference/plot_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot RUB figure — plot_figure","text":"df Data Frame bzw. Tibble","code":""},{"path":"/reference/plot_figure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot RUB figure — plot_figure","text":"ggplot object","code":""},{"path":"/reference/plot_figure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot RUB figure — plot_figure","text":"","code":"if (FALSE) { plot_figure(df) }"},{"path":"/reference/post_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Post process Word file created with officedown — post_process","title":"Post process Word file created with officedown — post_process","text":"Post process Word file created officedown","code":""},{"path":"/reference/post_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post process Word file created with officedown — post_process","text":"","code":"post_process(old_path, new_path, overwrite = FALSE)"},{"path":"/reference/post_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post process Word file created with officedown — post_process","text":"old_path String path Word file created officedown new_path New path edited Word file overwrite Boolean, overwrite files exist. FALSE file exists error thrown.","code":""},{"path":"/reference/post_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post process Word file created with officedown — post_process","text":"side effects","code":""},{"path":"/reference/render_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render report — render_report","title":"Render report — render_report","text":"Render report","code":""},{"path":"/reference/render_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render report — render_report","text":"","code":"render_report(   p_df,   p_df_stg = NULL,   report_nr,   rmd_template = here::here(\"datenreport_new.Rmd\"),   output_directory = NULL,   output_filename = NULL,   date = format(Sys.Date(), format = \"%B %Y\") )"},{"path":"/reference/render_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render report — render_report","text":"p_df Data frame containing data reports p_df_stg Optional data frame information cases report_nr Report number report rmd_template Path R Markdown File report, defaults ::(\"datenreport_new.Rmd\") output_directory Output directory rendered report, defaults ::(\"output\") output_filename Output filename rendered report, defaults p_df[[1, \"file_name\"]] date Date report displayed title page, defaults format(Sys.Date(), format= \"%B %Y\").","code":""},{"path":"/reference/render_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render report — render_report","text":"","code":"if (FALSE) { render_report(df, 12) }"},{"path":"/reference/replace_first_page_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Create header with option ","title":"Create header with option ","text":"Create header option \"different first page\" enabled","code":""},{"path":"/reference/replace_first_page_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create header with option ","text":"","code":"replace_first_page_header(doc)"},{"path":"/reference/replace_first_page_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create header with option ","text":"doc rdocx object","code":""},{"path":"/reference/replace_first_page_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create header with option ","text":"modified rdocx object","code":""},{"path":"/reference/replace_placeholder.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace placeholder strings in docx document — replace_placeholder","title":"Replace placeholder strings in docx document — replace_placeholder","text":"Replace placeholder strings docx document","code":""},{"path":"/reference/replace_placeholder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace placeholder strings in docx document — replace_placeholder","text":"","code":"replace_placeholder(   doc,   placeholder_text = \"PLACEHOLDER_TAB\",   replacement_text = \"\\t\" )"},{"path":"/reference/replace_placeholder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace placeholder strings in docx document — replace_placeholder","text":"doc rdocx object placeholder_text Character placeholder replaced, defaults \"PLACEHOLDER_TAB\" replacement_text Character replacement text, defaults \"\\t\"","code":""},{"path":"/reference/replace_placeholder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace placeholder strings in docx document — replace_placeholder","text":"Side effects","code":""},{"path":"/reference/replace_placeholder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace placeholder strings in docx document — replace_placeholder","text":"","code":"if (FALSE) { replace_placeholder(    path = \"test.docx\",    new_path = \"test_replaced.docx\" ) }"},{"path":"/reference/replace_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace level of TOC field — replace_toc","title":"Replace level of TOC field — replace_toc","text":"Replace level TOC field","code":""},{"path":"/reference/replace_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace level of TOC field — replace_toc","text":"","code":"replace_toc(doc, style, new_level)"},{"path":"/reference/replace_toc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace level of TOC field — replace_toc","text":"doc rdocx object style text, style referenced TOC field new_level numeric, new level TOC field","code":""},{"path":"/reference/replace_toc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace level of TOC field — replace_toc","text":"modified rdocx object","code":""},{"path":"/reference/rub_format_mixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Format flextable mixed type columns (integer, percentages, NAs) — rub_format_mixed","title":"Format flextable mixed type columns (integer, percentages, NAs) — rub_format_mixed","text":"Format flextable mixed type columns (integer, percentages, NAs)","code":""},{"path":"/reference/rub_format_mixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format flextable mixed type columns (integer, percentages, NAs) — rub_format_mixed","text":"","code":"rub_format_mixed(x)"},{"path":"/reference/rub_format_mixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format flextable mixed type columns (integer, percentages, NAs) — rub_format_mixed","text":"x Vector","code":""},{"path":"/reference/rub_format_mixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format flextable mixed type columns (integer, percentages, NAs) — rub_format_mixed","text":"Formatted vector","code":""},{"path":"/reference/rub_format_mixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format flextable mixed type columns (integer, percentages, NAs) — rub_format_mixed","text":"","code":"x <- c(\"2500\", \"0.29\", NA) rub_format_mixed(x) #> [1] \"2.500\" \"29.0%\" \"\""},{"path":"/reference/rub_format_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Format flextable columns with percentages (percentages, NAs) — rub_format_percent","title":"Format flextable columns with percentages (percentages, NAs) — rub_format_percent","text":"Format flextable columns percentages (percentages, NAs)","code":""},{"path":"/reference/rub_format_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format flextable columns with percentages (percentages, NAs) — rub_format_percent","text":"","code":"rub_format_percent(x)"},{"path":"/reference/rub_format_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format flextable columns with percentages (percentages, NAs) — rub_format_percent","text":"x Vector","code":""},{"path":"/reference/rub_format_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format flextable columns with percentages (percentages, NAs) — rub_format_percent","text":"Formatted vector","code":""},{"path":"/reference/rub_format_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format flextable columns with percentages (percentages, NAs) — rub_format_percent","text":"","code":"x <- c(\"0.29\", NA) rub_format_percent(x) #> [1] \"29%\" \"\""},{"path":"/reference/rub_plot_type_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot vertical stacked bar chart (figure type 1) — rub_plot_type_1","title":"Plot vertical stacked bar chart (figure type 1) — rub_plot_type_1","text":"Vertical stacked bar chart RUB corporate design. variables x_var, y_var fill_var required, others optional.","code":""},{"path":"/reference/rub_plot_type_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot vertical stacked bar chart (figure type 1) — rub_plot_type_1","text":"","code":"rub_plot_type_1(   df,   x_var,   y_var,   y_axis_label = \"\",   fill_var,   fill_reverse = FALSE,   fill_label = NULL,   caption = \"\",   caption_prefix = \"Quelle:\",   filter_cutoff = 0.04,   facet_var = NULL,   color = RUB_colors[\"blue\"],   palette_reverse = FALSE,   base_family = \"RubFlama\",   base_size = 11,   plot_width = 6.8 )"},{"path":"/reference/rub_plot_type_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot vertical stacked bar chart (figure type 1) — rub_plot_type_1","text":"df Data frame x_var Required variable name variable containing discrete x-coordinates. y_var Required variable name variable containing continuous y-coordinates. y_axis_label Optional label y-axis, defaults empty string. fill_var Variable name discrete variable determines groups stacked, e.g. degree. fill_reverse Boolean indicating whether order fill variable reversed, defaults FALSE. fill_label Optional variable name character variable containing names fill variable, defaults NULL. caption Optional character containing data source figure (prefix 'Quelle:' automatically added). caption_prefix Optional character containing prefix caption, defaults 'Quelle:'. filter_cutoff Optional cutoff value suppression data labels. default, values 0.04 total value stacked bar chart suppressed. facet_var Optional variable name discrete variable facet , defaults NULL. color Color font borders, defaults RUB_colors[\"blue\"], .e. #003560. palette_reverse Optional boolean indicating whether colors palette reversed, defaults FALSE. base_family base font family, defaults RubFlama base_size base font size, defaults 11 plot_width Width plot inches, defaults 6.8","code":""},{"path":"/reference/rub_plot_type_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot vertical stacked bar chart (figure type 1) — rub_plot_type_1","text":"ggplot object","code":""},{"path":"/reference/rub_plot_type_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot vertical stacked bar chart (figure type 1) — rub_plot_type_1","text":"","code":"# Create test values for all three mandatory variables (x_var, y_var, # fill_var). df_t1_ex1 <- tibble::tribble(    ~term, ~students, ~degree,    \"Spring '13\", 120, \"Bachelor 1-Subject\",    \"Spring '14\", 105, \"Bachelor 1-Subject\",    \"Spring '15\", 124, \"Bachelor 1-Subject\",    \"Spring '16\", 114, \"Bachelor 1-Subject\",    \"Spring '17\", 122, \"Bachelor 1-Subject\",    \"Spring '13\", 121, \"Master 1-Subject\",    \"Spring '14\", 129, \"Master 1-Subject\",    \"Spring '15\", 122, \"Master 1-Subject\",    \"Spring '16\", 168, \"Master 1-Subject\",    \"Spring '17\", 7, \"Master 1-Subject\", )  # The data source is df_t1_ex1, x_var is mapped to term, y_var to students, # and the fill_var to degree. rub_plot_type_1(    df = df_t1_ex1,    x_var = term,    y_var = students,    fill_var = degree )"},{"path":"/reference/rub_plot_type_1_and_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot grouped line chart on top of vertical stacked bar chart (combination chart of figure types 1 and 4) — rub_plot_type_1_and_4","title":"Plot grouped line chart on top of vertical stacked bar chart (combination chart of figure types 1 and 4) — rub_plot_type_1_and_4","text":"Plot grouped line chart top vertical stacked bar chart (combination chart figure types 1 4)","code":""},{"path":"/reference/rub_plot_type_1_and_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot grouped line chart on top of vertical stacked bar chart (combination chart of figure types 1 and 4) — rub_plot_type_1_and_4","text":"","code":"rub_plot_type_1_and_4(   df,   x_var,   x_axis_label = \"\",   y_var,   y_axis_label = \"\",   fill_var,   fill_reverse = FALSE,   fill_label = NULL,   group_var,   group_label = NULL,   caption = \"\",   caption_prefix = \"Quelle:\",   filter_cutoff = 0.04,   facet_var = NULL,   color = RUB_colors[\"blue\"],   palette_reverse = FALSE,   base_family = \"RubFlama\",   base_size = 11,   plot_width = 6.8 )"},{"path":"/reference/rub_plot_type_1_and_4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot grouped line chart on top of vertical stacked bar chart (combination chart of figure types 1 and 4) — rub_plot_type_1_and_4","text":"df Data frame x_var Required variable name variable containing discrete x-coordinates. x_axis_label Optional label x-axis, defaults empty string. y_var Required variable name variable containing continuous y-coordinates. y_axis_label Optional label y-axis, defaults empty string. fill_var Variable name discrete variable determines groups stacked, e.g. degree. fill_reverse Boolean indicating whether order fill variable reversed, defaults FALSE. fill_label Optional variable name character variable containing names fill variable, defaults NULL. group_var Variable name discrete variable determines groups forming one line, e.g. degree_id. group_label Optional variable name character variable containing names group variable (e.g. degree_txt), defaults #'     NULL. caption Optional character containing data source figure (prefix 'Quelle:' automatically added). caption_prefix Optional character containing prefix caption, defaults 'Quelle:'. filter_cutoff Optional cutoff value suppression data labels. default, values 0.04 total value stacked bar chart suppressed. facet_var Optional variable name discrete variable facet , defaults NULL. color Color font borders, defaults RUB_colors[\"blue\"], .e. #003560. palette_reverse Optional boolean indicating whether colors palette reversed, defaults FALSE. base_family base font family, defaults RubFlama base_size base font size, defaults 11 plot_width Width plot inches, defaults 6.8","code":""},{"path":"/reference/rub_plot_type_1_and_4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot grouped line chart on top of vertical stacked bar chart (combination chart of figure types 1 and 4) — rub_plot_type_1_and_4","text":"ggplot object","code":""},{"path":"/reference/rub_plot_type_1_and_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot grouped line chart on top of vertical stacked bar chart (combination chart of figure types 1 and 4) — rub_plot_type_1_and_4","text":"","code":"if (FALSE) { rub_plot_type_1_and_4(df = df) }"},{"path":[]},{"path":[]},{"path":"/reference/rub_plot_type_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot grouped line chart (figure type 4) — rub_plot_type_4","title":"Plot grouped line chart (figure type 4) — rub_plot_type_4","text":"Plot grouped line chart (figure type 4)","code":""},{"path":"/reference/rub_plot_type_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot grouped line chart (figure type 4) — rub_plot_type_4","text":"","code":"rub_plot_type_4(   df,   x_var,   x_axis_label = \"\",   y_var,   y_axis_label = \"\",   group_var,   group_label = NULL,   caption = \"\",   caption_prefix = \"Quelle:\",   filter_cutoff = 5,   facet_var = NULL,   color = RUB_colors[\"blue\"],   palette_reverse = FALSE,   base_family = \"RubFlama\",   base_size = 11 )"},{"path":"/reference/rub_plot_type_4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot grouped line chart (figure type 4) — rub_plot_type_4","text":"df Data frame x_var Required variable name variable containing discrete x-coordinates. x_axis_label Optional label x-axis, defaults empty string. y_var Required variable name variable containing continuous y-coordinates. y_axis_label Optional label y-axis, defaults empty string. group_var Variable name discrete variable determines groups forming one line, e.g. degree_id. group_label Optional variable name character variable containing names group variable (e.g. degree_txt), defaults #'     NULL. caption Optional character containing data source figure (prefix 'Quelle:' automatically added). caption_prefix Optional character containing prefix caption, defaults 'Quelle:'. filter_cutoff Optional integer marking cutoff value labels suppressed, defaults 5. facet_var Optional variable name discrete variable facet , defaults NULL. color Color font borders, defaults RUB_colors[\"blue\"], .e. #003560. palette_reverse Optional boolean indicating whether colors palette reversed, defaults FALSE. base_family base font family, defaults RubFlama base_size base font size, defaults 11","code":""},{"path":"/reference/rub_plot_type_4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot grouped line chart (figure type 4) — rub_plot_type_4","text":"ggplot2 object","code":""},{"path":"/reference/rub_plot_type_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot grouped line chart (figure type 4) — rub_plot_type_4","text":"","code":"if (FALSE) { rub_plot_type_4(    df = df_fig_t4,    x = time,    y = value_n_total,    group = degree_sort,    group_label = degree_txt ) }"},{"path":"/reference/rub_style_flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies RUB theme to flextable object — rub_style_flextable","title":"Applies RUB theme to flextable object — rub_style_flextable","text":"Applies RUB theme flextable object","code":""},{"path":"/reference/rub_style_flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies RUB theme to flextable object — rub_style_flextable","text":"","code":"rub_style_flextable(table, font = \"RUB Scala TZ\", font_size = 9)"},{"path":"/reference/rub_style_flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies RUB theme to flextable object — rub_style_flextable","text":"table Flextable object font Font Flextable theme, defaults RUB Scala TZ font_size Font size, defaults 9","code":""},{"path":"/reference/rub_style_flextable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies RUB theme to flextable object — rub_style_flextable","text":"Styled Flextable object","code":""},{"path":"/reference/rub_style_flextable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Applies RUB theme to flextable object — rub_style_flextable","text":"","code":"table_mtcars <- flextable::flextable(mtcars) rub_style_flextable(table_mtcars) #> a flextable object. #> col_keys: `mpg`, `cyl`, `disp`, `hp`, `drat`, `wt`, `qsec`, `vs`, `am`, `gear`, `carb`  #> header has 1 row(s)  #> body has 32 row(s)  #> original dataset sample:  #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2"},{"path":"/reference/rub_table_ab.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formatted flextable of response rates for the Absolvent:innenbefragung — rub_table_ab","title":"Get formatted flextable of response rates for the Absolvent:innenbefragung — rub_table_ab","text":"Get formatted flextable response rates Absolvent:innenbefragung","code":""},{"path":"/reference/rub_table_ab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formatted flextable of response rates for the Absolvent:innenbefragung — rub_table_ab","text":"","code":"rub_table_ab(df, typology, headings)"},{"path":"/reference/rub_table_ab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formatted flextable of response rates for the Absolvent:innenbefragung — rub_table_ab","text":"df Data frame typology Data frame flextable typology headings Character vectors headings","code":""},{"path":"/reference/rub_table_ab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formatted flextable of response rates for the Absolvent:innenbefragung — rub_table_ab","text":"Formatted Flextable","code":""},{"path":"/reference/rub_table_eb.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formatted flextable of response rates for the Eingangsbefragung — rub_table_eb","title":"Get formatted flextable of response rates for the Eingangsbefragung — rub_table_eb","text":"Get formatted flextable response rates Eingangsbefragung","code":""},{"path":"/reference/rub_table_eb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formatted flextable of response rates for the Eingangsbefragung — rub_table_eb","text":"","code":"rub_table_eb(df, typology, headings)"},{"path":"/reference/rub_table_eb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formatted flextable of response rates for the Eingangsbefragung — rub_table_eb","text":"df Data frame typology Data frame flextable typology headings Character vectors headings","code":""},{"path":"/reference/rub_table_eb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formatted flextable of response rates for the Eingangsbefragung — rub_table_eb","text":"Formatted Flextable","code":""},{"path":[]},{"path":"/reference/rub_table_eb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get formatted flextable of response rates for the Eingangsbefragung — rub_table_eb","text":"","code":"# Generate example data df_example <- structure(   list(     studieneingang = c(\"Geschlecht\", \"weiblich\", \"männlich\", \"Abschlussart\", \"Bachelor 1-Fach\", \"Bachelor 2-Fächer\", \"Magister Theologiae\", \"Master 1-Fach\", \"Staatsexamen\", \"Fächergruppe (erstes Studienfach)\", \"Geisteswissenschaften\", \"Humanmedizin / Gesundheitswissenschaften\", \"Ingenieurwissenschaften\", \"Kunst, Kunstwissenschaft\", \"Mathematik, Naturwissenschaften\", \"Rechts-, Wirtschafts- und Sozialwissenschaften\", \"Sport\", \"Gesamtzahl angeschriebene Studierende / gültige Fragebögen\", \"Rücklaufquote Studieneingangsbefragungen\"),     koepfe_rub = c(NA, 7513, 7464, NA, 8150, 3615, 54, 889, 2260, NA, 4006, 886, 2864, 243, 3574, 3136, 266, 14975, 0.31),     koepfe_rub_perc = c(NA, 0.5, 0.5, NA, 0.54, 0.24, 0, 0.06, 0.15, NA, 0.27, 0.06, 0.19, 0.02, 0.24, 0.21, 0.02, 1, 0.31),     koepfe_bef = c(NA, 2826, 1881, NA, 2284, 1234, 18, 303, 864, NA, 1407, 416, 688, 54, 1116, 921, 105, 4707, 0.31),     koepfe_bef_perc = c(NA, 0.6, 0.4, NA, 0.49, 0.26, 0, 0.06, 0.18, NA, 0.3, 0.09, 0.15, 0.01, 0.24, 0.2, 0.02, 1, 0.31),     row_id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19)   ),   class = c(\"data.frame\"),   row.names = c(NA,-19L) )  # Multi-level headings, see `flextable::set_headers` typology_example <- structure(   list(     col_keys = c(\"studieneingang\", \"koepfe_rub\", \"koepfe_rub_perc\", \"koepfe_bef\", \"koepfe_bef_perc\"),     colC = c(\"Studieneingang\", \"Studierende im 1. HS (WiSe 18/19 bis  WiSe 20/21)\", \"Studierende im 1. HS (WiSe 18/19 bis  WiSe 20/21)\", \"Studierende im 1. HS (WiSe 18/19 bis  WiSe 20/21)\", \"Studierende im 1. HS (WiSe 18/19 bis  WiSe 20/21)\"),     colB = c(\"Studieneingang\", \"Angeschrieben\", \"Angeschrieben\", \"Gültige Fragebögen\", \"Gültige Fragebögen\"),     colA = c(\"Studieneingang\", \"Köpfe\", \"(in %)\", \"Köpfe\", \"(in %)\")   ),   class = c(\"data.frame\"),   row.names = c(NA, -5L) )  # Text for rows that receive special formatting headings_example <- c(\"Geschlecht\", \"Abschlussart\", \"Fächergruppe (erstes Studienfach)\", \"Gesamtzahl angeschriebene Studierende / gültige Fragebögen\", \"Rücklaufquote Studieneingangsbefragungen\")  # Function call rub_table_eb(   df = df_example,   typology = typology_example,   headings = headings_example ) #> a flextable object. #> col_keys: `studieneingang`, `koepfe_rub`, `koepfe_rub_perc`, `koepfe_bef`, `koepfe_bef_perc`  #> header has 3 row(s)  #> body has 19 row(s)  #> original dataset sample:  #>    studieneingang koepfe_rub koepfe_rub_perc koepfe_bef koepfe_bef_perc row_id #> 1      Geschlecht         NA              NA         NA              NA      1 #> 2        weiblich       7513            0.50       2826            0.60      2 #> 3        männlich       7464            0.50       1881            0.40      3 #> 4    Abschlussart         NA              NA         NA              NA      4 #> 5 Bachelor 1-Fach       8150            0.54       2284            0.49      5"},{"path":"/reference/rub_table_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formatted flextable of items with largest deviation from comparison group — rub_table_item","title":"Get formatted flextable of items with largest deviation from comparison group — rub_table_item","text":"Get formatted flextable items largest deviation comparison group","code":""},{"path":"/reference/rub_table_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formatted flextable of items with largest deviation from comparison group — rub_table_item","text":"","code":"rub_table_item(df)"},{"path":"/reference/rub_table_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formatted flextable of items with largest deviation from comparison group — rub_table_item","text":"df Data frame","code":""},{"path":"/reference/rub_table_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formatted flextable of items with largest deviation from comparison group — rub_table_item","text":"Formatted Flextable","code":""},{"path":"/reference/rub_table_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formatted flextable of metrics — rub_table_metrics","title":"Get formatted flextable of metrics — rub_table_metrics","text":"Get formatted flextable metrics","code":""},{"path":"/reference/rub_table_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formatted flextable of metrics — rub_table_metrics","text":"","code":"rub_table_metrics(df)"},{"path":"/reference/rub_table_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formatted flextable of metrics — rub_table_metrics","text":"df Data frame","code":""},{"path":"/reference/rub_table_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formatted flextable of metrics — rub_table_metrics","text":"Formatted flextable","code":""},{"path":"/reference/rub_table_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formatted flextable of funded projects — rub_table_programs","title":"Get formatted flextable of funded projects — rub_table_programs","text":"Get formatted flextable funded projects","code":""},{"path":"/reference/rub_table_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formatted flextable of funded projects — rub_table_programs","text":"","code":"rub_table_programs(df)"},{"path":"/reference/rub_table_programs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formatted flextable of funded projects — rub_table_programs","text":"df Data frame","code":""},{"path":"/reference/rub_table_programs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formatted flextable of funded projects — rub_table_programs","text":"Formatted Flextable","code":""},{"path":[]},{"path":"/reference/rub_table_programs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get formatted flextable of funded projects — rub_table_programs","text":"","code":"# Create example data example_data <- data.frame(   stringsAsFactors = FALSE,   report_nr = c(1, 1, 1, 1, 1, 1),   programm = c(\"Forschendes Lernen\",\"Forschendes Lernen\",\"Forschendes Lernen\",\"Innovative Praxisprojekte\",\"interLECTURE\",\"UNIC@RUB\"),   projekttitel = c(\"Interkulturelle Bibelhermeneutiken. Kontextuelle Exegese im theologisch-interdisziplinären Diskurs\", \"Migration lokal denken. Begegnungen mit religiösen Gemeinschaften in NRW\",\"Traumatheologie: Kritische Bibellektüre anhand von Leiderfahrungen.  Entwicklung eines Tagungs- und Seminarkonzepts mit Studierenden zur angewandten wissenschaftlichen Exegese von Bibeltexten.\",\"Religiöse Pluralität entdecken, reflektieren und diskutierend sichtbar machen\",\"Globale Christentümer: Theologische und religionswissenschaftliche Perspektiven\",\"Design of a Virtual Exchange program for the Summer Semester 2022 between the Protestant Faculty of RUB and the Faculty of Theology of the University of Deusto in the frame of the UNIC cooperation\"),   antragsteller_innen_verantwortliche_personen = c(\"N. N.\",\"N. N.\",\"N. N.\",\"N. N.\",\"N. N.\",\"N. N.\"),   forderzeitraum_von = c(\"2021-10-01\",\"2019-10-01\",\"2021-04-01\",\"2021-04-01\",\"2020-06-01\",\"2022-02-01\"),   forderzeitraum_bis = c(\"2022-03-31\",\"2020-07-31\",\"2021-12-31\",\"2022-03-31\",\"2021-09-30\",\"2022-07-31\"),   rn = c(1L, 2L, 3L, 4L, 5L, 6L),   is_last_row = c(FALSE,FALSE,TRUE,TRUE,TRUE,TRUE) )  # Function call rub_table_programs(   df = example_data ) #> a flextable object. #> col_keys: `programm`, `projekttitel`, `antragsteller_innen_verantwortliche_personen`, `forderzeitraum_von`, `forderzeitraum_bis`  #> header has 2 row(s)  #> body has 6 row(s)  #> original dataset sample:  #>   report_nr                  programm #> 1         1        Forschendes Lernen #> 2         1        Forschendes Lernen #> 3         1        Forschendes Lernen #> 4         1 Innovative Praxisprojekte #> 5         1              interLECTURE #>                                                                                                                                                                                       projekttitel #> 1                                                                                               Interkulturelle Bibelhermeneutiken. Kontextuelle Exegese im theologisch-interdisziplinären Diskurs #> 2                                                                                                                         Migration lokal denken. Begegnungen mit religiösen Gemeinschaften in NRW #> 3 Traumatheologie: Kritische Bibellektüre anhand von Leiderfahrungen.  Entwicklung eines Tagungs- und Seminarkonzepts mit Studierenden zur angewandten wissenschaftlichen Exegese von Bibeltexten. #> 4                                                                                                                    Religiöse Pluralität entdecken, reflektieren und diskutierend sichtbar machen #> 5                                                                                                                  Globale Christentümer: Theologische und religionswissenschaftliche Perspektiven #>   antragsteller_innen_verantwortliche_personen forderzeitraum_von #> 1                                        N. N.         2021-10-01 #> 2                                        N. N.         2019-10-01 #> 3                                        N. N.         2021-04-01 #> 4                                        N. N.         2021-04-01 #> 5                                        N. N.         2020-06-01 #>   forderzeitraum_bis rn is_last_row #> 1         2022-03-31  1       FALSE #> 2         2020-07-31  2       FALSE #> 3         2021-12-31  3        TRUE #> 4         2022-03-31  4        TRUE #> 5         2021-09-30  5        TRUE"},{"path":"/reference/rub_table_stg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formatted flextable of student cases — rub_table_stg","title":"Get formatted flextable of student cases — rub_table_stg","text":"Get formatted flextable student cases","code":""},{"path":"/reference/rub_table_stg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formatted flextable of student cases — rub_table_stg","text":"","code":"rub_table_stg(df, label)"},{"path":"/reference/rub_table_stg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formatted flextable of student cases — rub_table_stg","text":"df Data frame columns studiengang, studienfachzaehler, faelle label Label first column","code":""},{"path":"/reference/rub_table_stg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formatted flextable of student cases — rub_table_stg","text":"Formatted Flextable","code":""},{"path":"/reference/rub_table_stg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get formatted flextable of student cases — rub_table_stg","text":"","code":"RUBer::rub_table_stg(   df = tibble::tribble(     ~studiengang, ~studienfachzaehler, ~faelle,     \"Studiengang A\", \"1. Fach\", 1,     \"Studiengang B\", \"2. Fach\", 1   ),   label = \"Beispieltabelle\" ) #> a flextable object. #> col_keys: `label`, `stat_1`, `stat_2`, `stat_0`  #> header has 1 row(s)  #> body has 3 row(s)  #> original dataset sample:  #>           label   stat_1   stat_2   stat_0 #> 1   Studiengang     <NA>     <NA>     <NA> #> 2 Studiengang A 1 (100%)   0 (0%) 1 (100%) #> 3 Studiengang B   0 (0%) 1 (100%) 1 (100%)"},{"path":"/reference/rub_table_vb.html","id":null,"dir":"Reference","previous_headings":"","what":"Get formatted flextable of response rates for the Verlaufsbefragung — rub_table_vb","title":"Get formatted flextable of response rates for the Verlaufsbefragung — rub_table_vb","text":"Get formatted flextable response rates Verlaufsbefragung","code":""},{"path":"/reference/rub_table_vb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get formatted flextable of response rates for the Verlaufsbefragung — rub_table_vb","text":"","code":"rub_table_vb(df, typology, headings)"},{"path":"/reference/rub_table_vb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get formatted flextable of response rates for the Verlaufsbefragung — rub_table_vb","text":"df Data frame typology Data frame flextable typology headings Character vectors headings","code":""},{"path":"/reference/rub_table_vb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get formatted flextable of response rates for the Verlaufsbefragung — rub_table_vb","text":"Formatted Flextable","code":""},{"path":"/reference/scale_color_rub.html","id":null,"dir":"Reference","previous_headings":"","what":"Color scale constructor for RUB colors — scale_color_rub","title":"Color scale constructor for RUB colors — scale_color_rub","text":"Color scale constructor RUB colors","code":""},{"path":"/reference/scale_color_rub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color scale constructor for RUB colors — scale_color_rub","text":"","code":"scale_color_rub(palette = \"discrete\", discrete = TRUE, reverse = FALSE, ...)"},{"path":"/reference/scale_color_rub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color scale constructor for RUB colors — scale_color_rub","text":"palette Character name palette RUB_palettes discrete Boolean indicating whether color aesthetic discrete , defaults TRUE. reverse Optional boolean indicating whether palette reversed, defaults FALSE. ... Additional arguments passed discrete_scale scale_gradient, used discrete TRUE FALSE, respectively","code":""},{"path":"/reference/scale_color_rub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color scale constructor for RUB colors — scale_color_rub","text":"","code":"ggplot2::ggplot(   data = mtcars,   ggplot2::aes(     x = mpg,     y = disp,     color = as.factor(carb)     )   ) +   ggplot2::geom_point() +   scale_color_rub(     palette = \"discrete\"   )"},{"path":"/reference/scale_fill_rub.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill scale constructor for RUB colors — scale_fill_rub","title":"Fill scale constructor for RUB colors — scale_fill_rub","text":"Fill scale constructor RUB colors","code":""},{"path":"/reference/scale_fill_rub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill scale constructor for RUB colors — scale_fill_rub","text":"","code":"scale_fill_rub(palette = \"discrete\", discrete = TRUE, reverse = FALSE, ...)"},{"path":"/reference/scale_fill_rub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill scale constructor for RUB colors — scale_fill_rub","text":"palette Character name palette RUB_palettes discrete Boolean indicating whether color aesthetic discrete reverse Boolean indicating whether palette reversed ... Additional arguments passed discrete_scale scale_gradient, used discrete TRUE FALSE, respectively","code":""},{"path":"/reference/scale_fill_rub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill scale constructor for RUB colors — scale_fill_rub","text":"","code":"ggplot2::ggplot(   data = mtcars,   ggplot2::aes(     x = as.factor(gear),     fill = as.factor(vs)     )   ) +   ggplot2::geom_bar() +   scale_fill_rub(     palette = \"discrete_2\"   )"},{"path":"/reference/set_factor_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares var and var_label columns for plotting by ordering them and turning\nthem into factors — set_factor_var","title":"Prepares var and var_label columns for plotting by ordering them and turning\nthem into factors — set_factor_var","text":"Prepares var var_label columns plotting ordering turning factors","code":""},{"path":"/reference/set_factor_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares var and var_label columns for plotting by ordering them and turning\nthem into factors — set_factor_var","text":"","code":"set_factor_var(df, var, var_label = NULL, reverse = FALSE)"},{"path":"/reference/set_factor_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares var and var_label columns for plotting by ordering them and turning\nthem into factors — set_factor_var","text":"df Data frame var Required variable name discrete variable turned factor. variable sorted alphabetically determine order. var_label Optional variable name discrete variable labels used instead var. var sort key, instance, var_label can used actual labels. reverse Whether order factor reverted, defaults FALSE.","code":""},{"path":"/reference/set_factor_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares var and var_label columns for plotting by ordering them and turning\nthem into factors — set_factor_var","text":"Data frame factor column.","code":""},{"path":"/reference/set_factor_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares var and var_label columns for plotting by ordering them and turning\nthem into factors — set_factor_var","text":"","code":"if (FALSE) { set_factor_var(df, var, TRUE) }"},{"path":"/reference/theme_rub.html","id":null,"dir":"Reference","previous_headings":"","what":"Add RUB theme to ggplot object — theme_rub","title":"Add RUB theme to ggplot object — theme_rub","text":"function allows add RUB theme ggplot charts.","code":""},{"path":"/reference/theme_rub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add RUB theme to ggplot object — theme_rub","text":"","code":"theme_rub(   base_size = 11,   base_family = \"RubFlama\",   base_line_size = base_size/22,   base_rect_size = base_size/22,   color = RUB_colors[\"blue\"],   has_facet = FALSE,   x_axis_label = FALSE,   y_axis_label = FALSE,   legend_title = FALSE,   plot_width = 6.8 )"},{"path":"/reference/theme_rub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add RUB theme to ggplot object — theme_rub","text":"base_size base font size, defaults 11 base_family base font family, defaults RubFlama base_line_size base size line elements, defaults base_size/22 base_rect_size base size rect elements, defaults base_size/22 color Color font borders, defaults RUB_colors[\"blue\"], .e. #003560. has_facet Boolean indicating whether facet headings required, defaults FALSE. x_axis_label Boolean indicating whether label x-axis, defaults FALSE. y_axis_label Boolean indicating whether label y-axis, defaults FALSE. legend_title Boolean indicating whether label legend, defaults FALSE. plot_width Width plot inches, defaults 6.8","code":""},{"path":"/reference/theme_rub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add RUB theme to ggplot object — theme_rub","text":"","code":"# Base plot ggplot2::ggplot( mtcars, ggplot2::aes(     x = mpg,     y = disp,     color = as.factor(carb)   ) ) + ggplot2::geom_point() + theme_rub()"}]
